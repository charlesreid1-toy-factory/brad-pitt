{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome! This is the documentation for the brad_pitt Python library. Most of this documentation is nonsense, but the Developers section contains real, useful documentation. If you are looking for the API documentation for the brad_pitt library, head over to the API Reference page. If you are looking for an explanation of the branch and release process, head over to the Release Process page. Et frontem nobis pelates \u00b6 Sanguine signo argo pelasgi talia \u00b6 Lorem markdownum fit flumina adhuc amorem cuncta altior Acrisium nocte gentesque! Quondam tumidus, et Italiam nulloque Dolona orat palmis quam errante cuius quam quod freta mansit mirata. Nymphe tellus, et fractaque toto; suo iubet! Curibus faciem: te matris oculos quoque noverat pectora arvis sponte annos dives. Fila paulum adamanta in latus quoque pecudumque date: haec nec ille. Neptune quem cumque humana meus, est est divum; muta senes fit nocuit . Cassis nec dicere, muneris consistere suis , iacet inserui intus sunt aristas cum Nesseo ingenium, spumam. Causa formas radium graves vulnus regalis nunc , ille etiamnum. Isset est tum viri nunc luxuriem, sunt proxima nomen vocis latices dulcedine agmen. Relevat letum in reclusi deflevere fieri portus nempe in illuc adempta, minus ope Vasta Iove. Fulmine hoc melior quantaque Heliadum est a sanguis Ulixe reddebant ventis , quid in sine sunt, vaga fortis ? Murmura pariterque miscuit meminitque pericula. Obscura texit \u00b6 Velo concipit vult, conceptus nec formosus crimine Horae: adest post et leporem refert suos. Animosque venit. In corpore ad lacertis : cornua ab quia flectit exta artes utque et. Neque venatibus carceris o huius, est perque, obstrusaque deos turis trabeati superba spernitque umida et guttura. Cum ore Mihi lingua poteris Pia ut tempus munus Latiis et sic paenitet rexit titulum epulae Enim ne, hic, laudis recessit convicia exhibuit aequo caudae nec protinus manebat, crescunt, Iuno. Comis et amantem capreisque videntur, non? Mihi nec convicia litora; tua coniuge et meaque dicite eadem , carchesia, aquarum. Quis animo, sol , est infamia medius cum, erit tamen admittitur, vulgat teneraque . Faciat deam numen potens mihi terram crepitantia amnis classem repetenda pretium illo mittantur aere adhuc luctuque latura tura. Fraternis arvo fausto sustinuit oculos, forte ore in tandem resilit similem voce inplerunt cognitus queri certamine. Dixit adeo est non veterumque adhuc perstant sensit: esse utque et munera Alcimedon portas Iuppiter et? Vota in Hyperionis rapui haeserat comitesque innoxia. Bis de ponti pluvialis morsus. Terraeque illa qualem, illo cape Troiana piscator; suas in. Agmina bibulaeque, ite est que tendit ferre?","title":"Index"},{"location":"#et-frontem-nobis-pelates","text":"","title":"Et frontem nobis pelates"},{"location":"#sanguine-signo-argo-pelasgi-talia","text":"Lorem markdownum fit flumina adhuc amorem cuncta altior Acrisium nocte gentesque! Quondam tumidus, et Italiam nulloque Dolona orat palmis quam errante cuius quam quod freta mansit mirata. Nymphe tellus, et fractaque toto; suo iubet! Curibus faciem: te matris oculos quoque noverat pectora arvis sponte annos dives. Fila paulum adamanta in latus quoque pecudumque date: haec nec ille. Neptune quem cumque humana meus, est est divum; muta senes fit nocuit . Cassis nec dicere, muneris consistere suis , iacet inserui intus sunt aristas cum Nesseo ingenium, spumam. Causa formas radium graves vulnus regalis nunc , ille etiamnum. Isset est tum viri nunc luxuriem, sunt proxima nomen vocis latices dulcedine agmen. Relevat letum in reclusi deflevere fieri portus nempe in illuc adempta, minus ope Vasta Iove. Fulmine hoc melior quantaque Heliadum est a sanguis Ulixe reddebant ventis , quid in sine sunt, vaga fortis ? Murmura pariterque miscuit meminitque pericula.","title":"Sanguine signo argo pelasgi talia"},{"location":"#obscura-texit","text":"Velo concipit vult, conceptus nec formosus crimine Horae: adest post et leporem refert suos. Animosque venit. In corpore ad lacertis : cornua ab quia flectit exta artes utque et. Neque venatibus carceris o huius, est perque, obstrusaque deos turis trabeati superba spernitque umida et guttura. Cum ore Mihi lingua poteris Pia ut tempus munus Latiis et sic paenitet rexit titulum epulae Enim ne, hic, laudis recessit convicia exhibuit aequo caudae nec protinus manebat, crescunt, Iuno. Comis et amantem capreisque videntur, non? Mihi nec convicia litora; tua coniuge et meaque dicite eadem , carchesia, aquarum. Quis animo, sol , est infamia medius cum, erit tamen admittitur, vulgat teneraque . Faciat deam numen potens mihi terram crepitantia amnis classem repetenda pretium illo mittantur aere adhuc luctuque latura tura. Fraternis arvo fausto sustinuit oculos, forte ore in tandem resilit similem voce inplerunt cognitus queri certamine. Dixit adeo est non veterumque adhuc perstant sensit: esse utque et munera Alcimedon portas Iuppiter et? Vota in Hyperionis rapui haeserat comitesque innoxia. Bis de ponti pluvialis morsus. Terraeque illa qualem, illo cape Troiana piscator; suas in. Agmina bibulaeque, ite est que tendit ferre?","title":"Obscura texit"},{"location":"api/","text":"Main Library \u00b6 class brad_pitt. Alpha ( *args , **kwargs ) Ut eu augue accumsan, venenatis nulla quis, elementum dui. adder ( self , *args ) Donec placerat faucibus dignissim. affix ( self , param1 , param2 , param3 ) In hac habitasse platea dictumst. class brad_pitt. Beta ( *args , **kwargs ) Praesent dapibus cursus imperdiet. beeps ( self , **kwargs ) Nulla imperdiet, turpis eu vulputate pulvinar, felis erat facilisis nisl. beers ( self , **kwargs ) Sed a lacus neque. Vestibulum aliquet augue nec urna aliquet, eu rutrum nisl auctor. billy ( self ) Curabitur cursus leo pellentesque enim tristique, quis bibendum ante rhoncus. Exceptions \u00b6 brad_pitt.PittFall docstring members","title":"API Reference"},{"location":"api/#main-library","text":"class brad_pitt. Alpha ( *args , **kwargs ) Ut eu augue accumsan, venenatis nulla quis, elementum dui. adder ( self , *args ) Donec placerat faucibus dignissim. affix ( self , param1 , param2 , param3 ) In hac habitasse platea dictumst. class brad_pitt. Beta ( *args , **kwargs ) Praesent dapibus cursus imperdiet. beeps ( self , **kwargs ) Nulla imperdiet, turpis eu vulputate pulvinar, felis erat facilisis nisl. beers ( self , **kwargs ) Sed a lacus neque. Vestibulum aliquet augue nec urna aliquet, eu rutrum nisl auctor. billy ( self ) Curabitur cursus leo pellentesque enim tristique, quis bibendum ante rhoncus.","title":"Main Library"},{"location":"api/#exceptions","text":"brad_pitt.PittFall docstring members","title":"Exceptions"},{"location":"artifact_releases/","text":"This page covers how artifacts (such as packaged files, eggs, or documentation) are released. When are artifacts created? \u00b6 Tasks that create artifacts should be performed when the final release prep branch has been merged into the develop branch. That merge commit will be the one that is tagged with the new version, and will be the commit cut to main (main will point to this commit once make release has been run). All artifacts should be generated from that commit. But also, the artifacts should be generated before the final commit is tagged and the release cut to main, just in case something goes wrong during the artifact generation process (although that should hopefully be unusual). That means the artifacts should be generated from the develop branch, after the release prep branch is merged into develop , but before we have run make release from the develop branch. Where does it happen? \u00b6 See the scripts/release.sh script, just before the operations that tag the release and cut the release to main, there is a block of code that will deploy the current documentation version to GitHub Pages.","title":"Artifact Release Process"},{"location":"artifact_releases/#when-are-artifacts-created","text":"Tasks that create artifacts should be performed when the final release prep branch has been merged into the develop branch. That merge commit will be the one that is tagged with the new version, and will be the commit cut to main (main will point to this commit once make release has been run). All artifacts should be generated from that commit. But also, the artifacts should be generated before the final commit is tagged and the release cut to main, just in case something goes wrong during the artifact generation process (although that should hopefully be unusual). That means the artifacts should be generated from the develop branch, after the release prep branch is merged into develop , but before we have run make release from the develop branch.","title":"When are artifacts created?"},{"location":"artifact_releases/#where-does-it-happen","text":"See the scripts/release.sh script, just before the operations that tag the release and cut the release to main, there is a block of code that will deploy the current documentation version to GitHub Pages.","title":"Where does it happen?"},{"location":"fightclub/","text":"Beware of falling rocks Vliferam texique collesque spatio, est citharam paulum latum onus, a accepit deorum, in. Non nos ad creditis, pax in cum mihi dolor, praepetibus forte, pietas ! Vero iugis in edidici , tamquam eundo dignus: volucres conpulit, fata vara tempora. Avidi rudis Aethalion cinnamaque belli tum \u00b6 Rictus calorem \u00b6 Lorem markdownum mittit crescendo ignibus longius, ut flector videt perculit filia, est pro facibus; enim. Prope ignarus, sic cepit, Pallas pariterque, non hic: metallis ut indiciique et quid quoque. Legem intacta ire cui potest Somni \u00b6 Dare saxis, viribus caute tumidum secura fugere quoque desiderioque saltu. Senior dubito; maximus ferrumque lata, Cinyphiumque pars et tenes vindicet. Sketchy code Carent aliis, genetrix nympha, caelebs inquit. Rigore aere reddere, manibus recanduit sanguine, figit, sua. Esse videbar. Conantem et lyra, enim, moles Fatis alas petit, Achivos arva frementi capacibus habet Achilles per manu: if (cmos_smtp_rosetta) { printer_error(dnsHexadecimal, resolution, copy); rj += up_unix_ripping; } phishing_keywords_smtp = plug_optical(tween_system, capacityDram, wpa); if (crm_server_database(screenshot(57))) { gigo -= 2; copyrightCaseImpact(variable_kilobyte_menu, southbridgeSaasWord); scanStateQwerty(-5, 3, ergonomics_refresh); } else { wildcard_database = state_halftone_rpm(crossplatform, 5) * ldap_gate; } Echionides haec est auro \u00b6 Nam Iuno; epulasque erat viri matris seque: relictus. Ferrum ad Bacchus bracchia ipse plura ponere metum ager creatus minuunt? Nam duxit montibus virtute illis ministrarum Iovis \u00b6 Humo clamor fata! Praecipue ridentem materiamque figere non rerum toro parte vires sonuere mollitaque prospicit ab. Cinyran intus! Unum est quae mihi unam agmina invenit revocare et reor de traxerunt penetrale pollice, pugnat! Cum fugit ad tutoque sertis est unco locumque, Parcite ad multas Tyrrhena levavit. Vix lumina desierat \u00b6 Servatum Iuppiter apertum \u00b6 Lorem markdownum ulterius tantumque feracis! Inquit fragorem urbis materiaque subducere, mergor pro cum vepre, nomen contraria terreat moxque. Uva scindit misit pigris quid rursus inguina posses fusis insuperabile levem. Undis curalium quaesitae semine. Ortas nobis, hos super, sed, flectat rebus ire autem nec datis. Numina adempto dextris pendentiaque iacent. Nec illas circumspexit pervenit, madidum revocamina genetrice arsit, Ammon. Iussit auso inpune meae peragit sinu consumpserat tempora verum rigido munera? Dum causa admisitque repugnat Amore. Mori erat amnicolaeque inter Pelion adstringit dederint \u00b6 Regimen carmine sidere amplectens aptamque, regi adhuc, usus ora femina . Tibi defluxere serpens iussos sanguine secrevit cruore Lapithae turres rotatis adsueta volantes Saturnus illo non magis naribus. Perdere esto tradita; modumque dedit Caesareo paelex, fuit pluma saxo neque et hoc, cum. Magnas potitus naufragus coniugis huius, si Hypanis Latiis certamina Procri , agros pars audiat Peleu Philomela saucius! Exoratis ignavo tamen et Lyciamque antrum simul Parte venerit ab latuit Argus Sonitusque de iunxit venerit promissa Cervice virgineusque venit hanc ullum inde vixque Posses morari Temeraria miserata Milite mihi nimia derepta \u00b6 Oraque exiguo nata inmanis paene: aures fugit Talia aliquemque aper . Tollentes et ipse obscurus remoraminaque trabibus, est demum radix praeter infelix parva tulit concubitus? Ignis est aper numen! In cornua hastam omnia neget quam manu sudore rebar, est firmo; dixit Aethiopum honorque fuerat montis. Capillos venandi pars , non frustra caelumque curvamine totumque accedere veris sideribus tumultus tu? exabyte(scalable - 2); raw += vpnExtranetCd + degaussBarcraftRequirements; officeFsbImpact -= optical * wimaxMount + only_vdu; var cable = sms.smishing.associationModemDual(834717) + simplex; if (clean == card) { jpegBotCommercial += friendSla; eccBus = 4 + 54 + payload_phishing; warm.hit_broadband = ray + master; } else { ispUser(bare(networkFile, 706123)); safeAccessDown = disk_cable(pci + key_san_rootkit); inputTiffSurge = baseband_reality_burn + broadbandInputMidi(718035); } Inpatiens tractus capiti quae \u00b6 Mirantibus ustus oblitus placebimus amantem. Adversum quocumque voce, nidi de si nec tertia monuere deum subiectis hostia possent ante porrigit pignus frutices, consistere . Temporis pectora summe. Fuit lapsis: sed erat dixit est, echidnae polenta imitamine. Accedere penates Nocet petebam genitor peperisse vertitur excussam tu Videt cannis vos Levatus fatum Litus et flector te advolat ut colla coierunt: mulcebunt eras dotabere ordine, repandus ab . Coniuge pendebant tenetis omnis inire natis, deceptus, quo manus, sit ibimus. Ceyca vina ferentes \u00b6 Nefasque thalamos \u00b6 Lorem markdownum domus, traiectum rura tam fortuna umbra qui occupat advolat doluit aptos, ora primum per. Coma religione Pleiadum colebat. Igitur demit, clipeus, ne meae modus fraternis optat! Pennas Ismenus libido collo petiit, et pererrat iubasque, ut orbem vel? Validum conplent Perseia, modo operata letum debere, quo Silvius indulgere? Semper cratem, vix finxit pependit in idque adflavit moderamine illam. Ipsum undis cornua \u00b6 Delicuit hic: crura ignibus glacies imitatus, ad mandat quinque. Iamque amaris spumantiaque exoratis ponit te sedit positaeque ad sentiet. Nominat ullis petere Aeneaeque et ibat adstitit iam, matura densum. Veteris et credat terris; ubi iam ut sollicita ille? Recens fudit bellique veniam hoc aequor \u00b6 Sanctasque cadat. Pars pati falsa tardantis flumina fretum. In spumis obiecit formidine pectora gravis. Tu simul securibus arva metu qui, protinus genu, iam pugnae repetens: feres. if (jsf_association_multi.property(jsp_font * kbps, excelOverwrite(55, 495511, plug_botnet))) { matrixStationInternet(5, kindle_portal(server_vrml_plug, duplex_oem_ip, 603250), lockPaper(icon_exbibyte_server)); insertion_cell_gamma -= ddr(on_character, matrix, rdram - webcamRowCaptcha); personal_blacklist_cgi(irc_thyristor_bank, defaultProgramming); } else { computer_cycle = 1; donationware.sampling_delete = 72 / 421591 + -5; } cyberspaceServicesIeee.queryForumPiconet(imapFrequencyUml, characterSpool); var open = multiplatform_nui_sku; Mox aestuat telaque mea prodes \u00b6 Paulatim cavas Dixit, hunc iecit foro imagine sorbere et inmitibus, nutricisque. Ferrum ac Annus loquendo tecto incandescit mihi tristis, precibus Aeneadae! Cauda locum magniloquo quae ingemuit, iam caelum est auras fecere, nexibus caesaries. Donec habitura sua undae carina quoque solebat magnum; dea et sequitur? Super Tereus monstravit dedit fulvo simplex per certe per nos Tyrrhenus penna enim nec liceret socero. Foedera metu , suo altera. Me procul fortunae Peleus generumque nunc Simois, adimunt iuppiter postquam sine.","title":"Fight Club"},{"location":"fightclub/#avidi-rudis-aethalion-cinnamaque-belli-tum","text":"","title":"Avidi rudis Aethalion cinnamaque belli tum"},{"location":"fightclub/#rictus-calorem","text":"Lorem markdownum mittit crescendo ignibus longius, ut flector videt perculit filia, est pro facibus; enim. Prope ignarus, sic cepit, Pallas pariterque, non hic: metallis ut indiciique et quid quoque.","title":"Rictus calorem"},{"location":"fightclub/#legem-intacta-ire-cui-potest-somni","text":"Dare saxis, viribus caute tumidum secura fugere quoque desiderioque saltu. Senior dubito; maximus ferrumque lata, Cinyphiumque pars et tenes vindicet. Sketchy code Carent aliis, genetrix nympha, caelebs inquit. Rigore aere reddere, manibus recanduit sanguine, figit, sua. Esse videbar. Conantem et lyra, enim, moles Fatis alas petit, Achivos arva frementi capacibus habet Achilles per manu: if (cmos_smtp_rosetta) { printer_error(dnsHexadecimal, resolution, copy); rj += up_unix_ripping; } phishing_keywords_smtp = plug_optical(tween_system, capacityDram, wpa); if (crm_server_database(screenshot(57))) { gigo -= 2; copyrightCaseImpact(variable_kilobyte_menu, southbridgeSaasWord); scanStateQwerty(-5, 3, ergonomics_refresh); } else { wildcard_database = state_halftone_rpm(crossplatform, 5) * ldap_gate; }","title":"Legem intacta ire cui potest Somni"},{"location":"fightclub/#echionides-haec-est-auro","text":"Nam Iuno; epulasque erat viri matris seque: relictus. Ferrum ad Bacchus bracchia ipse plura ponere metum ager creatus minuunt?","title":"Echionides haec est auro"},{"location":"fightclub/#nam-duxit-montibus-virtute-illis-ministrarum-iovis","text":"Humo clamor fata! Praecipue ridentem materiamque figere non rerum toro parte vires sonuere mollitaque prospicit ab. Cinyran intus! Unum est quae mihi unam agmina invenit revocare et reor de traxerunt penetrale pollice, pugnat! Cum fugit ad tutoque sertis est unco locumque, Parcite ad multas Tyrrhena levavit.","title":"Nam duxit montibus virtute illis ministrarum Iovis"},{"location":"fightclub/#vix-lumina-desierat","text":"","title":"Vix lumina desierat"},{"location":"fightclub/#servatum-iuppiter-apertum","text":"Lorem markdownum ulterius tantumque feracis! Inquit fragorem urbis materiaque subducere, mergor pro cum vepre, nomen contraria terreat moxque. Uva scindit misit pigris quid rursus inguina posses fusis insuperabile levem. Undis curalium quaesitae semine. Ortas nobis, hos super, sed, flectat rebus ire autem nec datis. Numina adempto dextris pendentiaque iacent. Nec illas circumspexit pervenit, madidum revocamina genetrice arsit, Ammon. Iussit auso inpune meae peragit sinu consumpserat tempora verum rigido munera? Dum causa admisitque repugnat Amore.","title":"Servatum Iuppiter apertum"},{"location":"fightclub/#mori-erat-amnicolaeque-inter-pelion-adstringit-dederint","text":"Regimen carmine sidere amplectens aptamque, regi adhuc, usus ora femina . Tibi defluxere serpens iussos sanguine secrevit cruore Lapithae turres rotatis adsueta volantes Saturnus illo non magis naribus. Perdere esto tradita; modumque dedit Caesareo paelex, fuit pluma saxo neque et hoc, cum. Magnas potitus naufragus coniugis huius, si Hypanis Latiis certamina Procri , agros pars audiat Peleu Philomela saucius! Exoratis ignavo tamen et Lyciamque antrum simul Parte venerit ab latuit Argus Sonitusque de iunxit venerit promissa Cervice virgineusque venit hanc ullum inde vixque Posses morari Temeraria miserata","title":"Mori erat amnicolaeque inter Pelion adstringit dederint"},{"location":"fightclub/#milite-mihi-nimia-derepta","text":"Oraque exiguo nata inmanis paene: aures fugit Talia aliquemque aper . Tollentes et ipse obscurus remoraminaque trabibus, est demum radix praeter infelix parva tulit concubitus? Ignis est aper numen! In cornua hastam omnia neget quam manu sudore rebar, est firmo; dixit Aethiopum honorque fuerat montis. Capillos venandi pars , non frustra caelumque curvamine totumque accedere veris sideribus tumultus tu? exabyte(scalable - 2); raw += vpnExtranetCd + degaussBarcraftRequirements; officeFsbImpact -= optical * wimaxMount + only_vdu; var cable = sms.smishing.associationModemDual(834717) + simplex; if (clean == card) { jpegBotCommercial += friendSla; eccBus = 4 + 54 + payload_phishing; warm.hit_broadband = ray + master; } else { ispUser(bare(networkFile, 706123)); safeAccessDown = disk_cable(pci + key_san_rootkit); inputTiffSurge = baseband_reality_burn + broadbandInputMidi(718035); }","title":"Milite mihi nimia derepta"},{"location":"fightclub/#inpatiens-tractus-capiti-quae","text":"Mirantibus ustus oblitus placebimus amantem. Adversum quocumque voce, nidi de si nec tertia monuere deum subiectis hostia possent ante porrigit pignus frutices, consistere . Temporis pectora summe. Fuit lapsis: sed erat dixit est, echidnae polenta imitamine. Accedere penates Nocet petebam genitor peperisse vertitur excussam tu Videt cannis vos Levatus fatum Litus et flector te advolat ut colla coierunt: mulcebunt eras dotabere ordine, repandus ab . Coniuge pendebant tenetis omnis inire natis, deceptus, quo manus, sit ibimus.","title":"Inpatiens tractus capiti quae"},{"location":"fightclub/#ceyca-vina-ferentes","text":"","title":"Ceyca vina ferentes"},{"location":"fightclub/#nefasque-thalamos","text":"Lorem markdownum domus, traiectum rura tam fortuna umbra qui occupat advolat doluit aptos, ora primum per. Coma religione Pleiadum colebat. Igitur demit, clipeus, ne meae modus fraternis optat! Pennas Ismenus libido collo petiit, et pererrat iubasque, ut orbem vel? Validum conplent Perseia, modo operata letum debere, quo Silvius indulgere? Semper cratem, vix finxit pependit in idque adflavit moderamine illam.","title":"Nefasque thalamos"},{"location":"fightclub/#ipsum-undis-cornua","text":"Delicuit hic: crura ignibus glacies imitatus, ad mandat quinque. Iamque amaris spumantiaque exoratis ponit te sedit positaeque ad sentiet. Nominat ullis petere Aeneaeque et ibat adstitit iam, matura densum. Veteris et credat terris; ubi iam ut sollicita ille?","title":"Ipsum undis cornua"},{"location":"fightclub/#recens-fudit-bellique-veniam-hoc-aequor","text":"Sanctasque cadat. Pars pati falsa tardantis flumina fretum. In spumis obiecit formidine pectora gravis. Tu simul securibus arva metu qui, protinus genu, iam pugnae repetens: feres. if (jsf_association_multi.property(jsp_font * kbps, excelOverwrite(55, 495511, plug_botnet))) { matrixStationInternet(5, kindle_portal(server_vrml_plug, duplex_oem_ip, 603250), lockPaper(icon_exbibyte_server)); insertion_cell_gamma -= ddr(on_character, matrix, rdram - webcamRowCaptcha); personal_blacklist_cgi(irc_thyristor_bank, defaultProgramming); } else { computer_cycle = 1; donationware.sampling_delete = 72 / 421591 + -5; } cyberspaceServicesIeee.queryForumPiconet(imapFrequencyUml, characterSpool); var open = multiplatform_nui_sku;","title":"Recens fudit bellique veniam hoc aequor"},{"location":"fightclub/#mox-aestuat-telaque-mea-prodes","text":"Paulatim cavas Dixit, hunc iecit foro imagine sorbere et inmitibus, nutricisque. Ferrum ac Annus loquendo tecto incandescit mihi tristis, precibus Aeneadae! Cauda locum magniloquo quae ingemuit, iam caelum est auras fecere, nexibus caesaries. Donec habitura sua undae carina quoque solebat magnum; dea et sequitur? Super Tereus monstravit dedit fulvo simplex per certe per nos Tyrrhenus penna enim nec liceret socero. Foedera metu , suo altera. Me procul fortunae Peleus generumque nunc Simois, adimunt iuppiter postquam sine.","title":"Mox aestuat telaque mea prodes"},{"location":"hotfix/","text":"x.y.z x = major version number y = minor version number z = patch version number As mentioned on the Release Process page, hotfixes and emergency patches are released by bumping the patch version number. Fixing Problems \u00b6 Why Hotfixes are Necessary \u00b6 A hotfix refers to a short-term quick fix for a problem with something running in production. To understand why hotfixes are necessary, consider the following scenario: suppose you cut a release 1.4.y , and a group of users adopts that version and starts using it in production. Separately, suppose you develop several major features and you cut a new major release, 2.x . Going forward, you would prefer if everyone adopted the 2.x branch, and all future development will focus on 2.x (there will not be a 1.5 ), but you still have users using 1.4.y in production. Hotfix Scenario \u00b6 Suppose we have a tag for v1.4.0, which was cut some time in the past, and since then we have created a new major version 2.0.0 and its corresponding tag. main tag:v2.0.0 | o--o--o--o--o--o / develop o--o--o--o--o | | tag:v1.4 Now suppose we need to fix something in 1.4.0 (which tag:v1.4 points to). There are two scenarios: The fix for 1.4.0 fixes something that no longer applies in 2.0.0 (one-off hotfix) The fix for 1.4.0 fixes something that is still in 2.0.0 (upstream hotfix) Prepare to Apply Hotfix \u00b6 Whichever approach you are going to use, you will need to create a starting branch. Create a new branch starting at the commit that the v1.4 tag points to. Here's how to do that: Start by making sure you have the latest tags: git fetch --all --tags Assuming your working directory is clean, you should be able to check out the tag you want to apply the hotfix to: git checkout tags/v1.4 -b release/v1.4 Now the git diagram looks like this: release/v1.4 o--o--o--o--o | | tag:v1.4 One-Off Hotfix \u00b6 The following procedure is for a fix to version 1.4.y that does not affect version 2.x. Starting from branch release/v1.4 , create a new hotfix branch. Here, we call it hotfix/v1.4/fix-typos but that naming convention is arbitrary: git checkout -b hotfix/v1.4/fix-typos Now the git diagram looks like this: hotfix/v1.4/fix-typos release/v1.4 o--o--o--o--o | | tag:v1.4 Contribute typo fixes to version 1.4.0 with git commit commands: hotfix/v1.4/fix-typos o--o--o / / o--o--o--o--o release/v1.4 | | tag:v1.4 This branch should also bump the patch version number using the make rule: make bump_patch_version For example, if the original tag v1.4 pointed to the 1.4.0 commit, then the hotfix should bump the patch version to 1.4.1. (Update the CHANGELOG too.) Once all commits have been added to the hotfix and it is ready to merge back into the release branch, open a pull request to merge hotfix/v1.4/fix-typos into release/v1.4 . Once the PR is opened, reviewed, approved, and merged, the git diagram will look like this: hotfix/v1.4/fix-typos o--o--o / \\ / \\ o--o--o--o--o ----------o | release/v1.4 | tag:v1.4 Now, from the release/v1.4 branch, run the release script, but because this is fixing a version that is no longer the latest version, we should only create a git tag for the new release, we should not cut that release to main. make release_tag You are ready to run bump2version to bump the patch version, 1.4.0 to 1.4.1 , and update the v1.4 git tag to point to the new commit: # start with a dry run make dryrun_bump_patch_version # do it really make bump_patch_version (Note: we do not want to cut a release to main, because a newer version has already been cut to main.) Upstream HotFix \u00b6 Now let's walk through a hotfix that affects both 1.4.0 and 2.0.0. Revisiting the git diagram: main tag:v2.0 | o--o--o / o--o--o--o--o | | tag:v1.4 We can start at the common ancestor commit, which in this case is git tag v1.4. We check out the hotfix branch directly from that git tag: git fetch --all --tags git checkout tags/v1.4 -b hotfix/fix-typos Contribute Typo Fixes \u00b6 Contribute typo fixes to the hotfix branch with git commit commands: main tag:v2.0 | o--o--o / hotfix/fix-typos o--o--o--o--o--------o--o--o | | tag:v1.4 Now we have to merge the hotfix into any older versions that are affected (and their version number bumped), and merge the hotfix into the latest version if it is affected (and its version number bumped). If the latest branch is updated, a new release should also be cut to main. Merge Fixes to Older Version \u00b6 Now we have to merge the hotfix changes into the tagged prior versions, and bump the version number, and if this is the latest branch, cut a new release to main. Start by fetching all the tags: git fetch --all --tags Now check out the tag for the older version, 1.4. Create a new release branch: git checkout tags/v1.4 -b release/v1.4 git merge --no-ff hotfix/fix-typos which will result in this git diagram: main tag:v2.0 | o--o--o / hotfix/fix-typos o--o--o--o--o--------o--o--o |\\ \\ | \\--------------o | release/v1.4 tag:v1.4 Now run bump2version to bump the patch version, 1.4.0 to 1.4.1 , and update the v1.4 git tag to point to the new commit: # start with a dry run make dryrun_bump_patch_version # do it really make bump_patch_version (Note: we do not want to cut a release to main, because a newer version has already been cut to main.) This results in: main tag:v2.0 | o--o--o / hotfix/fix-typos o--o--o--o--o--------o--o--o \\ \\ \\--------------o---o | release/v1.4 | | tag:v1.4 Merge Fixes Upstream to Newer Version \u00b6 Similarly, the hotfix can be merged into v2.0. Start by fetching all the tags: git fetch --all --tags Now check out the tag for the newer version, 2.0. Create a new release branch: git checkout tags/v2.0 -b release/v2.0 git merge --no-ff hotfix/fix-typos This results in: main tag:v2.0 | release/v2.0 o--o--o--------o / / o--o--o--o--o--------o--o--o hotfix/fix-typos \\ \\ \\--------------o---o | release/v1.4 | | tag:v1.4 Now run bump2version to bump the patch version, 2.0.0 to 2.0.1 , and update the v2.0 git tag to point to the new commit: # start with a dry run make dryrun_bump_patch_version # do it really make bump_patch_version This results in: tag:v2.0 | | | release/v2.0 o--o--o--------o---o / / o--o--o--o--o--------o--o--o hotfix/fix-typos \\ \\ \\--------------o---o | release/v1.4 | | tag:v1.4 Finally, because this is the latest version, run make release to cut the newest release to the main branch: make release This results in the v2.0 tag being cut to main: main tag:v2.0 | | | release/v2.0 o--o--o--------o---o / / o--o--o--o--o--------o--o--o hotfix/fix-typos \\ \\ \\--------------o---o | release/v1.4 | | tag:v1.4","title":"Hotfix Process"},{"location":"hotfix/#fixing-problems","text":"","title":"Fixing Problems"},{"location":"hotfix/#why-hotfixes-are-necessary","text":"A hotfix refers to a short-term quick fix for a problem with something running in production. To understand why hotfixes are necessary, consider the following scenario: suppose you cut a release 1.4.y , and a group of users adopts that version and starts using it in production. Separately, suppose you develop several major features and you cut a new major release, 2.x . Going forward, you would prefer if everyone adopted the 2.x branch, and all future development will focus on 2.x (there will not be a 1.5 ), but you still have users using 1.4.y in production.","title":"Why Hotfixes are Necessary"},{"location":"hotfix/#hotfix-scenario","text":"Suppose we have a tag for v1.4.0, which was cut some time in the past, and since then we have created a new major version 2.0.0 and its corresponding tag. main tag:v2.0.0 | o--o--o--o--o--o / develop o--o--o--o--o | | tag:v1.4 Now suppose we need to fix something in 1.4.0 (which tag:v1.4 points to). There are two scenarios: The fix for 1.4.0 fixes something that no longer applies in 2.0.0 (one-off hotfix) The fix for 1.4.0 fixes something that is still in 2.0.0 (upstream hotfix)","title":"Hotfix Scenario"},{"location":"hotfix/#prepare-to-apply-hotfix","text":"Whichever approach you are going to use, you will need to create a starting branch. Create a new branch starting at the commit that the v1.4 tag points to. Here's how to do that: Start by making sure you have the latest tags: git fetch --all --tags Assuming your working directory is clean, you should be able to check out the tag you want to apply the hotfix to: git checkout tags/v1.4 -b release/v1.4 Now the git diagram looks like this: release/v1.4 o--o--o--o--o | | tag:v1.4","title":"Prepare to Apply Hotfix"},{"location":"hotfix/#one-off-hotfix","text":"The following procedure is for a fix to version 1.4.y that does not affect version 2.x. Starting from branch release/v1.4 , create a new hotfix branch. Here, we call it hotfix/v1.4/fix-typos but that naming convention is arbitrary: git checkout -b hotfix/v1.4/fix-typos Now the git diagram looks like this: hotfix/v1.4/fix-typos release/v1.4 o--o--o--o--o | | tag:v1.4 Contribute typo fixes to version 1.4.0 with git commit commands: hotfix/v1.4/fix-typos o--o--o / / o--o--o--o--o release/v1.4 | | tag:v1.4 This branch should also bump the patch version number using the make rule: make bump_patch_version For example, if the original tag v1.4 pointed to the 1.4.0 commit, then the hotfix should bump the patch version to 1.4.1. (Update the CHANGELOG too.) Once all commits have been added to the hotfix and it is ready to merge back into the release branch, open a pull request to merge hotfix/v1.4/fix-typos into release/v1.4 . Once the PR is opened, reviewed, approved, and merged, the git diagram will look like this: hotfix/v1.4/fix-typos o--o--o / \\ / \\ o--o--o--o--o ----------o | release/v1.4 | tag:v1.4 Now, from the release/v1.4 branch, run the release script, but because this is fixing a version that is no longer the latest version, we should only create a git tag for the new release, we should not cut that release to main. make release_tag You are ready to run bump2version to bump the patch version, 1.4.0 to 1.4.1 , and update the v1.4 git tag to point to the new commit: # start with a dry run make dryrun_bump_patch_version # do it really make bump_patch_version (Note: we do not want to cut a release to main, because a newer version has already been cut to main.)","title":"One-Off Hotfix"},{"location":"hotfix/#upstream-hotfix","text":"Now let's walk through a hotfix that affects both 1.4.0 and 2.0.0. Revisiting the git diagram: main tag:v2.0 | o--o--o / o--o--o--o--o | | tag:v1.4 We can start at the common ancestor commit, which in this case is git tag v1.4. We check out the hotfix branch directly from that git tag: git fetch --all --tags git checkout tags/v1.4 -b hotfix/fix-typos","title":"Upstream HotFix"},{"location":"hotfix/#contribute-typo-fixes","text":"Contribute typo fixes to the hotfix branch with git commit commands: main tag:v2.0 | o--o--o / hotfix/fix-typos o--o--o--o--o--------o--o--o | | tag:v1.4 Now we have to merge the hotfix into any older versions that are affected (and their version number bumped), and merge the hotfix into the latest version if it is affected (and its version number bumped). If the latest branch is updated, a new release should also be cut to main.","title":"Contribute Typo Fixes"},{"location":"hotfix/#merge-fixes-to-older-version","text":"Now we have to merge the hotfix changes into the tagged prior versions, and bump the version number, and if this is the latest branch, cut a new release to main. Start by fetching all the tags: git fetch --all --tags Now check out the tag for the older version, 1.4. Create a new release branch: git checkout tags/v1.4 -b release/v1.4 git merge --no-ff hotfix/fix-typos which will result in this git diagram: main tag:v2.0 | o--o--o / hotfix/fix-typos o--o--o--o--o--------o--o--o |\\ \\ | \\--------------o | release/v1.4 tag:v1.4 Now run bump2version to bump the patch version, 1.4.0 to 1.4.1 , and update the v1.4 git tag to point to the new commit: # start with a dry run make dryrun_bump_patch_version # do it really make bump_patch_version (Note: we do not want to cut a release to main, because a newer version has already been cut to main.) This results in: main tag:v2.0 | o--o--o / hotfix/fix-typos o--o--o--o--o--------o--o--o \\ \\ \\--------------o---o | release/v1.4 | | tag:v1.4","title":"Merge Fixes to Older Version"},{"location":"hotfix/#merge-fixes-upstream-to-newer-version","text":"Similarly, the hotfix can be merged into v2.0. Start by fetching all the tags: git fetch --all --tags Now check out the tag for the newer version, 2.0. Create a new release branch: git checkout tags/v2.0 -b release/v2.0 git merge --no-ff hotfix/fix-typos This results in: main tag:v2.0 | release/v2.0 o--o--o--------o / / o--o--o--o--o--------o--o--o hotfix/fix-typos \\ \\ \\--------------o---o | release/v1.4 | | tag:v1.4 Now run bump2version to bump the patch version, 2.0.0 to 2.0.1 , and update the v2.0 git tag to point to the new commit: # start with a dry run make dryrun_bump_patch_version # do it really make bump_patch_version This results in: tag:v2.0 | | | release/v2.0 o--o--o--------o---o / / o--o--o--o--o--------o--o--o hotfix/fix-typos \\ \\ \\--------------o---o | release/v1.4 | | tag:v1.4 Finally, because this is the latest version, run make release to cut the newest release to the main branch: make release This results in the v2.0 tag being cut to main: main tag:v2.0 | | | release/v2.0 o--o--o--------o---o / / o--o--o--o--o--------o--o--o hotfix/fix-typos \\ \\ \\--------------o---o | release/v1.4 | | tag:v1.4","title":"Merge Fixes Upstream to Newer Version"},{"location":"interview/","text":"FYI Hastam saevitiam et reluxit Troezen verba commeruisse viva aut talibus fides. Aquis digna: teneas arces haec, palustribus telis! Foribus domos hausit tecta. Marem ego coniugii fuit quaesitisque loqui suo \u00b6 Et bene Camenae quendam declive cognoram \u00b6 Lorem markdownum ut cursu, in per, auroque? Eris recludi, ponit hoc, me erat verbis, adspirate procul facinus delapsa atque. His ista, equorum auras lacusque quamvis nullos dea stetit dixit, vel tot nunc fiat, moriturae ea? Meus fumificisque balatus omnes fumabant et mirum quicquid amores fas est, vagus tenet: tanto. Fatis alas petit, Achivos arva frementi capacibus habet Achilles per manu fuso? Nurusque in fuerat novitate nec dare Tempe descendit obruta, se . Fingebam sisto; ianua genus videres in ferro fata sensit mea totoque fronti! Haec accedere \u00b6 Tasks Non sinit vix rogando caede retinere nautae solidoque vibrata illa; ignara manu. Patitur reddidit male hinc corpora cibos . Est alii mente fata moriturae habent. Elisa dixit iussit verba a premens sibi sine, saepe luce, reccidit. Carent aliis, genetrix nympha, caelebs inquit. Rigore aere reddere, manibus recanduit sanguine, figit, sua. Esse videbar. Conantem et lyra, enim, moles vanaque laesi perdere , timido, ira veretur trahunt, ore cernis Achivi. Vincere et fatetur, Neritius resistite neglectos esse, flebat, audiat. Ignota enim cum sitim gramen sublimemque adspicit Patria monimenta Positu unde barbara in nocte curasque mensura Multaque tamen Naupliades Potuit conpressit inmensum verendam eunt confiteorque canis, crescere, fati. Conversae femina. Theseus iacentes: praeterque relicta nodum retro parvo officium cinisque prolem, tuis. Decet haustus moratus Sol te ter posset, dignabitur indulgens, cum. Huic fraternaque tamen fluctibus inclusos ultorque innecte leonis salientis accipiam posita successit at iuvenesque coepti! Iuno sic sceleris spesque morsu simul obest clausit munere. Dryope te lacus ut populo necem stellae veris , vota, est telum iacuit alios amnis horridus . Videres notam me postquam celatos, visa vultus, ab. Quae inmurmurat saxo poterat proles aderant paternas raptaque cum, superabat genae, cognoscere pars Inachus, ut. Tu cum iniqui, Atlantis silvas, in suis deserat aurora obstitit, et muros ab. Niveis conplentur vulneret, haec, aures, vulnus cursu vocet ingenti. Quam adsere novissima deum, nec et quod nostri Trachinia, fragmina recessit sublato mundus caput promptum somnus, paravi. Viri nec , est ipso turbant? Servavique sorbent undas, quodcumque quodque . Dum bos vos tot venenis castae servabitur \u00b6 Tectas suum tribus suoque nomine litore \u00b6 Lorem markdownum Alcyone bene ore omnia exhortatur mundi domitos pro. Inquit amantibus sanus, puerpera haeserat, ne silet parte ne cereris terris doloris summa. Mihi flagrant, par agnosse velaque non pacis ritu mulcet umbrosaque nitido. Illa nostri pedum, posito remisit est consistere lyncas sua scires tamen et stetit. Argolicae nullius torum . Phrygiae ea portas? Nec Nam nos et fore nato miserrima novenis iussit omne tangi pater Cometen intonsum et deoque exhortatur falsam? Comitumque saeviat tantum labefactaque dilexisse patriam. Dona tot est deus sponte. Vobis et mortale stetit: pelagoque rapit, qui fraude gestu: iam fata per bacaque collo Cererem. Non terra \u00b6 Quinque mandata omnes cavo oscula! Conde praerupta nomen si numina redimat medio ferox ignes auras caesae geruntur ibit. Vel vestro, plebe Phaethonta lacrimantia pharetratae comprenditur sumus rapidisque, hoc. eide_so_resolution += safeComputing(2, ringSampling + wanTextKernel) * -3; lion = inbox(1, meta_smtp + mode_adapter, utfBareKeyboard + arrayDotCopyright) - andAsp; var xslt = unit_boot; Multa mentem validique et videri virisque dixit, meae numeros ripas dilectus mora hos, sine simul . Quercus circum nubes patriumque undas, ille tenuit suis ipsa sprevit suae iactantur oraque obstrusaque. Est mihi ne communis, mitia sive passibus, facti ramis ferro iussam rupta ! Relinquam me intrat amnes! Probat anili altius hortaturque caput solebant Terram!","title":"Interview with a Vampire"},{"location":"interview/#marem-ego-coniugii-fuit-quaesitisque-loqui-suo","text":"","title":"Marem ego coniugii fuit quaesitisque loqui suo"},{"location":"interview/#et-bene-camenae-quendam-declive-cognoram","text":"Lorem markdownum ut cursu, in per, auroque? Eris recludi, ponit hoc, me erat verbis, adspirate procul facinus delapsa atque. His ista, equorum auras lacusque quamvis nullos dea stetit dixit, vel tot nunc fiat, moriturae ea? Meus fumificisque balatus omnes fumabant et mirum quicquid amores fas est, vagus tenet: tanto. Fatis alas petit, Achivos arva frementi capacibus habet Achilles per manu fuso? Nurusque in fuerat novitate nec dare Tempe descendit obruta, se . Fingebam sisto; ianua genus videres in ferro fata sensit mea totoque fronti!","title":"Et bene Camenae quendam declive cognoram"},{"location":"interview/#haec-accedere","text":"Tasks Non sinit vix rogando caede retinere nautae solidoque vibrata illa; ignara manu. Patitur reddidit male hinc corpora cibos . Est alii mente fata moriturae habent. Elisa dixit iussit verba a premens sibi sine, saepe luce, reccidit. Carent aliis, genetrix nympha, caelebs inquit. Rigore aere reddere, manibus recanduit sanguine, figit, sua. Esse videbar. Conantem et lyra, enim, moles vanaque laesi perdere , timido, ira veretur trahunt, ore cernis Achivi. Vincere et fatetur, Neritius resistite neglectos esse, flebat, audiat. Ignota enim cum sitim gramen sublimemque adspicit Patria monimenta Positu unde barbara in nocte curasque mensura Multaque tamen Naupliades Potuit conpressit inmensum verendam eunt confiteorque canis, crescere, fati. Conversae femina. Theseus iacentes: praeterque relicta nodum retro parvo officium cinisque prolem, tuis. Decet haustus moratus Sol te ter posset, dignabitur indulgens, cum. Huic fraternaque tamen fluctibus inclusos ultorque innecte leonis salientis accipiam posita successit at iuvenesque coepti! Iuno sic sceleris spesque morsu simul obest clausit munere. Dryope te lacus ut populo necem stellae veris , vota, est telum iacuit alios amnis horridus . Videres notam me postquam celatos, visa vultus, ab. Quae inmurmurat saxo poterat proles aderant paternas raptaque cum, superabat genae, cognoscere pars Inachus, ut. Tu cum iniqui, Atlantis silvas, in suis deserat aurora obstitit, et muros ab. Niveis conplentur vulneret, haec, aures, vulnus cursu vocet ingenti. Quam adsere novissima deum, nec et quod nostri Trachinia, fragmina recessit sublato mundus caput promptum somnus, paravi. Viri nec , est ipso turbant? Servavique sorbent undas, quodcumque quodque .","title":"Haec accedere"},{"location":"interview/#dum-bos-vos-tot-venenis-castae-servabitur","text":"","title":"Dum bos vos tot venenis castae servabitur"},{"location":"interview/#tectas-suum-tribus-suoque-nomine-litore","text":"Lorem markdownum Alcyone bene ore omnia exhortatur mundi domitos pro. Inquit amantibus sanus, puerpera haeserat, ne silet parte ne cereris terris doloris summa. Mihi flagrant, par agnosse velaque non pacis ritu mulcet umbrosaque nitido. Illa nostri pedum, posito remisit est consistere lyncas sua scires tamen et stetit. Argolicae nullius torum . Phrygiae ea portas? Nec Nam nos et fore nato miserrima novenis iussit omne tangi pater Cometen intonsum et deoque exhortatur falsam? Comitumque saeviat tantum labefactaque dilexisse patriam. Dona tot est deus sponte. Vobis et mortale stetit: pelagoque rapit, qui fraude gestu: iam fata per bacaque collo Cererem.","title":"Tectas suum tribus suoque nomine litore"},{"location":"interview/#non-terra","text":"Quinque mandata omnes cavo oscula! Conde praerupta nomen si numina redimat medio ferox ignes auras caesae geruntur ibit. Vel vestro, plebe Phaethonta lacrimantia pharetratae comprenditur sumus rapidisque, hoc. eide_so_resolution += safeComputing(2, ringSampling + wanTextKernel) * -3; lion = inbox(1, meta_smtp + mode_adapter, utfBareKeyboard + arrayDotCopyright) - andAsp; var xslt = unit_boot; Multa mentem validique et videri virisque dixit, meae numeros ripas dilectus mora hos, sine simul . Quercus circum nubes patriumque undas, ille tenuit suis ipsa sprevit suae iactantur oraque obstrusaque. Est mihi ne communis, mitia sive passibus, facti ramis ferro iussam rupta ! Relinquam me intrat amnes! Probat anili altius hortaturque caput solebant Terram!","title":"Non terra"},{"location":"release/","text":"x.y.z x = major version number y = minor version number z = patch version number Normal releases are done by bumping the major version (if new changes will make existing code backwards-incompatible), or the minor version (if new changes will not break existing code). Hotfixes and emergency patches are released by bumping the patch version number. These can complicate the branches, so we treat them separately. See Hotfix Release Process . For documentation and artifact releases, see Artifact Release Process . Best Case Scenario \u00b6 Let's run through what the steps to cut a new release look like in the best case scenario. Develop New Features \u00b6 All development of new versions happens starting from the develop branch. Users start from the develop branch: git checkout develop (Assuming a clean working directory, and after pulling latest changes.) To add a new feature or fix a bug, create a new branch with the feature or fix (we recommend naming it <name of author>-<name of feature> ): git checkout -b chaz-new-branch The diagram of the git repository looks like this: chaz-new-branch o--o--o develop Make commits on the new branch to develop the feature. When finished, the diagram of the git repository looks like this: chaz-new-branch o--o--o--o--o--o / / --o--o develop Open, Review, and Merge Pull Request \u00b6 Now open a PR to merge chaz-new-branch into develop . This PR will be reviewed, possibly with changes requested, and finally it will be merged into develop . When the PR is merged, the digram of the git repository will look like this: chaz-new-branch o--o--o--o--o--o / \\ / \\ --o--o--------------------o develop Repeat this process until you have added all features and fixes for the next release into develop. Preparing for a Major/Minor Release \u00b6 When develop has accumulated enough features and fixes for a new release, the code is frozen. A final pull request is opened against develop . This final pull request will prepare for the new release by updating the following: Updating CHANGELOG Updating dependencies in requirements.txt Updating version number with bumpversion For example, if the branch preparing for release X.Y were called release-prep-vX.Y then the git diagram would look like this: release-prep-vX.Y o--o--o / --o--o--o develop We are now ready to bump the version number with bump2version . There are several make rules provided to do that: # if bumping major version make bump_major_version # if bumping minor version make bump_minor_version Create a PR from this release preparation branch, have the PR reviewed, and merge it into develop : release-prep-vX.Y o--o--o / \\ --o--o--o---------o develop We are almost done, but still need to officially release the new version. Run Release Script \u00b6 Once the final version is merged to develop , the last step is to run the scripts/release.sh script from the develop branch. The release script does two things: Creates a git tag for the new commit to allow referencing it by version number Cuts a new release to main (in other words, force the main (default) branch to point to this commit, so that when people clone the repo, they get this latest version) The release script takes two arguments: The source (promote from) branch, usually develop The destination (promote to) branch, usually main If those are your two arguments, punch it: make release Artifact Releases \u00b6 There is another important consideration as part of the release process, which is, how and when to generate and upload artifacts, such as eggs, tar files, packages, or documentation. To address these questions, visit the Artifact Release Process page. What About the Next Major/Minor Version? \u00b6 Once the glow of victory from cutting the latest version to main has faded, you will be thinking about how to proceed on development of the next major or minor version. To start developing the next version, follow the instructions at the beginning of this document - switch to the develop branch and start adding features and fixes.","title":"Release Process"},{"location":"release/#best-case-scenario","text":"Let's run through what the steps to cut a new release look like in the best case scenario.","title":"Best Case Scenario"},{"location":"release/#develop-new-features","text":"All development of new versions happens starting from the develop branch. Users start from the develop branch: git checkout develop (Assuming a clean working directory, and after pulling latest changes.) To add a new feature or fix a bug, create a new branch with the feature or fix (we recommend naming it <name of author>-<name of feature> ): git checkout -b chaz-new-branch The diagram of the git repository looks like this: chaz-new-branch o--o--o develop Make commits on the new branch to develop the feature. When finished, the diagram of the git repository looks like this: chaz-new-branch o--o--o--o--o--o / / --o--o develop","title":"Develop New Features"},{"location":"release/#open-review-and-merge-pull-request","text":"Now open a PR to merge chaz-new-branch into develop . This PR will be reviewed, possibly with changes requested, and finally it will be merged into develop . When the PR is merged, the digram of the git repository will look like this: chaz-new-branch o--o--o--o--o--o / \\ / \\ --o--o--------------------o develop Repeat this process until you have added all features and fixes for the next release into develop.","title":"Open, Review, and Merge Pull Request"},{"location":"release/#preparing-for-a-majorminor-release","text":"When develop has accumulated enough features and fixes for a new release, the code is frozen. A final pull request is opened against develop . This final pull request will prepare for the new release by updating the following: Updating CHANGELOG Updating dependencies in requirements.txt Updating version number with bumpversion For example, if the branch preparing for release X.Y were called release-prep-vX.Y then the git diagram would look like this: release-prep-vX.Y o--o--o / --o--o--o develop We are now ready to bump the version number with bump2version . There are several make rules provided to do that: # if bumping major version make bump_major_version # if bumping minor version make bump_minor_version Create a PR from this release preparation branch, have the PR reviewed, and merge it into develop : release-prep-vX.Y o--o--o / \\ --o--o--o---------o develop We are almost done, but still need to officially release the new version.","title":"Preparing for a Major/Minor Release"},{"location":"release/#run-release-script","text":"Once the final version is merged to develop , the last step is to run the scripts/release.sh script from the develop branch. The release script does two things: Creates a git tag for the new commit to allow referencing it by version number Cuts a new release to main (in other words, force the main (default) branch to point to this commit, so that when people clone the repo, they get this latest version) The release script takes two arguments: The source (promote from) branch, usually develop The destination (promote to) branch, usually main If those are your two arguments, punch it: make release","title":"Run Release Script"},{"location":"release/#artifact-releases","text":"There is another important consideration as part of the release process, which is, how and when to generate and upload artifacts, such as eggs, tar files, packages, or documentation. To address these questions, visit the Artifact Release Process page.","title":"Artifact Releases"},{"location":"release/#what-about-the-next-majorminor-version","text":"Once the glow of victory from cutting the latest version to main has faded, you will be thinking about how to proceed on development of the next major or minor version. To start developing the next version, follow the instructions at the beginning of this document - switch to the develop branch and start adding features and fixes.","title":"What About the Next Major/Minor Version?"}]}